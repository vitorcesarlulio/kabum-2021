$(document).ready(function () {
    $("#loginUserRegister").keyup(function () {
        $(this).val($(this).val().toUpperCase());
    });
});
function findLogin() {
    var a = $("#loginUserRegister").serialize();
    $.ajax({
        type: "POST",
        url: "/usuarios/verificar-existencia-usuario",
        data: a,
        processData: !1,
        success: function (a) {
            !0 == a ? (toastr.error("Erro: usu\xE1rio j\xE1 existente no banco de dados!"), $(".btn-register-user").attr("disabled", !0)) : $(".btn-register-user").attr("disabled", !1);
        },
        error: function () {
            toastr.error("Erro: dados n\xE3o enviados ao servidor, contate o administrador do sistema!");
        },
    });
}
function showPassword() {
    $("#passwordUserRegister").is(":password")
        ? ($("#passwordUserRegister").prop("type", "text"), $("#iconPasswordRegister").prop("class", "far fa-eye-slash"))
        : ($("#passwordUserRegister").prop("type", "password"), $("#iconPasswordRegister").prop("class", "far fa-eye"));
}
function showPasswordConfirm() {
    $("#confirmationPasswordRegister").is(":password")
        ? ($("#confirmationPasswordRegister").prop("type", "text"), $("#iconPasswordRegisterConfirm").prop("class", "far fa-eye-slash"))
        : ($("#confirmationPasswordRegister").prop("type", "password"), $("#iconPasswordRegisterConfirm").prop("class", "far fa-eye"));
}
$("#modalRegisterUser #permitionUserRegister").click(function () {
    $("#modalRegisterUser #permitionAdminRegister").attr("checked", !1), $("#modalRegisterUser #divPermitionAdminRegister").attr("class", "btn btn-secondary"), $("#modalRegisterUser #permitionUserRegister").attr("checked", !0);
}),
    $("#modalRegisterUser #permitionAdminRegister").click(function () {
        $("#modalRegisterUser #permitionUserRegister").attr("checked", !1), $("#modalRegisterUser #divPermitionUserRegister").attr("class", "btn btn-secondary"), $("#modalRegisterUser #permitionAdminRegister").attr("checked", !0);
    }),
    $("#modalRegisterUser #statusActiveUserRegister").click(function () {
        $("#modalRegisterUser #statusInactiveRegister").attr("checked", !1), $("#modalRegisterUser #divStatusInactiveUserRegister").attr("class", "btn btn-secondary"), $("#modalRegisterUser #statusActiveUserRegister").attr("checked", !0);
    }),
    $("#modalRegisterUser #statusInactiveRegister").click(function () {
        $("#modalRegisterUser #statusActiveUserRegister").attr("checked", !1), $("#modalRegisterUser #divStatusActiveUserRegister").attr("class", "btn btn-secondary"), $("#modalRegisterUser #statusInactiveRegister").attr("checked", !0);
    }),
    $(document).on("click", ".btn-edit-user", function () {
        var a = $(this).attr("id");
        $("#modalEditUser #idUserEdit").val(a),
            $.ajax({
                url: "/usuarios/listar-editar",
                type: "POST",
                data: { idUserEdit: $(this).attr("id") },
                success: function (a) {
                    if (JSON.parse(a).length) {
                        var b = JSON.parse(a)[0];
                        $("#modalEditUser #nameUserEdit").val(b.nameUser),
                            $("#modalEditUser #surnameUserEdit").val(b.surnameUser),
                            $("#modalEditUser #loginUserEdit").val(b.loginUser),
                            $("#modalEditUser #loginUserEdit").val(b.loginUser),
                            "admin" === b.permitionUser
                                ? ($("#modalEditUser #permitionUserEdit").attr("checked", !1),
                                  $("#modalEditUser #labelUserPermition").attr("class", "btn btn-secondary"),
                                  $("#modalEditUser #permitionAdminEdit").val(b.permitionUser),
                                  $("#modalEditUser #labelAdminPermition").attr("class", "btn btn-secondary active"),
                                  $("#modalEditUser #permitionAdminEdit").attr("checked", ""))
                                : ($("#modalEditUser #permitionAdminEdit").attr("checked", !1),
                                  $("#modalEditUser #labelAdminPermition").attr("class", "btn btn-secondary"),
                                  $("#modalEditUser #permitionUserEdit").val(b.permitionUser),
                                  $("#modalEditUser #labelUserPermition").attr("class", "btn btn-secondary active"),
                                  $("#modalEditUser #permitionUserEdit").attr("checked", !0)),
                            "I" === b.statusUser
                                ? ($("#modalEditUser #statusActiveUserEdit").attr("checked", !1),
                                  $("#modalEditUser #labelUserStatusActive").attr("class", "btn btn-secondary"),
                                  $("#modalEditUser #labelUserStatusInactive").attr("class", "btn btn-secondary active"),
                                  $("#modalEditUser #statusInactiveUserEdit").attr("checked", ""))
                                : ($("#modalEditUser #statusInactiveUserEdit").attr("checked", !1),
                                  $("#modalEditUser #labelUserStatusInactive").attr("class", "btn btn-secondary"),
                                  $("#modalEditUser #labelUserStatusActive").attr("class", "btn btn-secondary active"),
                                  $("#modalEditUser #statusActiveUserEdit").attr("checked", !0)),
                            $("#modalEditUser").modal("show");
                    }
                },
            });
    });
function showPasswordEdit() {
    $("#passwordUserEdit").is(":password")
        ? ($("#passwordUserEdit").prop("type", "text"), $("#iconPasswordEdit").prop("class", "far fa-eye-slash"))
        : ($("#passwordUserEdit").prop("type", "password"), $("#iconPasswordEdit").prop("class", "far fa-eye"));
}
function showPasswordConfirmEdit() {
    $("#confirmationPasswordEdit").is(":password")
        ? ($("#confirmationPasswordEdit").prop("type", "text"), $("#iconPasswordEditConfirm").prop("class", "far fa-eye-slash"))
        : ($("#confirmationPasswordEdit").prop("type", "password"), $("#iconPasswordEditConfirm").prop("class", "far fa-eye"));
}
$("#modalEditUser #permitionUserEdit").click(function () {
    $("#modalEditUser #permitionAdminEdit").attr("checked", !1), $("#modalEditUser #permitionUserEdit").attr("checked", !0);
}),
    $("#modalEditUser #permitionAdminEdit").click(function () {
        $("#modalEditUser #permitionUserEdit").attr("checked", !1), $("#modalEditUser #permitionAdminEdit").attr("checked", !0);
    }),
    $("#modalEditUser #statusActiveUserEdit").click(function () {
        $("#modalEditUser #statusInactiveUserEdit").attr("checked", !1), $("#modalEditUser #statusActiveUserEdit").attr("checked", !0);
    }),
    $("#modalEditUser #statusInactiveUserEdit").click(function () {
        $("#modalEditUser #statusActiveUserEdit").attr("checked", !1), $("#modalEditUser #statusInactiveUserEdit").attr("checked", !0);
    }),
    $(document).ready(function () {
        var a = $("#listUsers").DataTable({
            deferRender: !0,
            processing: !0,
            serverSide: !0,
            ajax: {
                url: "/usuarios/listar",
                type: "POST",
                data: function (a) {
                    var b = $("#formFiltersUsers #startDate").val(),
                        c = $("#formFiltersUsers #endDate").val(),
                        d = $("#formFiltersUsers #statusUser").val(),
                        e = $("#formFiltersUsers #accessLevel").val(),
                        f = $("#formFiltersUsers #filterLogin").val();
                    (a.startDate = b), (a.endDate = c), (a.statusUser = d), (a.accessLevel = e), (a.filterLogin = f);
                },
            },
            language: { url: "//cdn.datatables.net/plug-ins/1.10.21/i18n/Portuguese-Brasil.json" },
            autoWidth: !1,
            columnDefs: [
                { targets: 5, width: "10%", orderable: !1, searchable: !1 },
                { targets: 4, width: "12%" },
            ],
            responsive: !0,
            lengthChange: !0,
            keys: !0,
            fixedHeader: !0,
            colReorder: !0,
            order: [4, "asc"],
            dom: 'B <"clear"> lfrtip',
            lengthMenu: [
                [10, 25, 50, 100, -1],
                ["10", "25", "50", "100", "Tudo"],
            ],
            buttons: [
                {
                    extend: "collection",
                    text: "Controle",
                    autoClose: !0,
                    buttons: [
                        { extend: "pageLength", text: "Resultados por p\xE1gina" },
                        {
                            extend: "pdfHtml5",
                            key: { key: "p", altKey: !0 },
                            text: '<u>P</u>DF &nbsp; <i class="far fa-file-pdf"></i>',
                            orientation: "portrait",
                            pageSize: "A4",
                            download: "open",
                            header: !0,
                            exportOptions: { columns: [0, 1, 2, 3, 4], order: "applied" },
                            customize: function (a) {
                                (a.content[1].table.widths = ["25%", "25%", "15%", "15%", "20%"]),
                                    (a.pageMargins = [20, 65, 20, 35]),
                                    (a.defaultStyle.fontSize = 10),
                                    (a.styles.tableHeader.fontSize = 12),
                                    (a.styles.tableHeader.fillColor = "#0060B1"),
                                    a.content.splice(0, 1),
                                    (a.defaultStyle.alignment = "center");
                                var b = document.getElementById("descriptionReport"),
                                    c = b.value;
                                a.header = function () {
                                    return {
                                        columns: [
                                            { image: logoPDF, width: 130 },
                                            { alignment: "right", fontSize: 13, text: c },
                                        ],
                                        margin: 20,
                                    };
                                };
                                var d = new Date(),
                                    e = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear();
                                a.footer = function (a, b) {
                                    return {
                                        columns: [
                                            { alignment: "left", text: ["Criado em: ", { text: e.toString() }] },
                                            { alignment: "center", text: "Kabum" },
                                            { alignment: "right", text: ["P\xE1gina: ", { text: a.toString() }, " de: ", { text: b.toString() }] },
                                        ],
                                        margin: [20, 10, 20, 10],
                                    };
                                };
                            },
                        },
                        { extend: "excel", text: '<u>E</u>xcel &nbsp; <i class="far fa-file-excel"></i>', key: { key: "e", altKey: !0 }, exportOptions: { columns: [0, 1, 2, 3, 4] } },
                        { collectionTitle: "Visibilidade da coluna", text: "Visibilidade da coluna", extend: "colvis", collectionLayout: "two-column" },
                    ],
                },
            ],
        });
        $("#formFiltersUsers #startDate").keyup(function () {
            a.draw();
        }),
            $("#formFiltersUsers #endDate").keyup(function () {
                a.draw();
            }),
            $("#formFiltersUsers #statusUser").change(function () {
                a.draw();
            }),
            $("#formFiltersUsers #accessLevel").change(function () {
                a.draw();
            }),
            $("#formFiltersUsers #filterLogin").change(function () {
                a.draw();
            });
    });
